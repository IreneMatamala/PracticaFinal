name: Blue-Green Deployment

on:
  workflow_dispatch:

jobs:
  blue-green:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Kubernetes
      uses: azure/setup-kubectl@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Connect to AKS
      uses: azure/aks-set-context@v3
      with:
        resource-group: techwave-rg
        cluster-name: techwave-aks

    - name: Check current version
      id: detect
      run: |
        CURRENT=$(kubectl get service frontend-service -n techwave-app -o jsonpath='{.spec.selector.version}' || echo "blue")
        echo "current_version=$CURRENT" >> $GITHUB_OUTPUT
        
        if [ "$CURRENT" == "blue" ]; then
          echo "new_version=green" >> $GITHUB_OUTPUT
          echo "ðŸŽ¯ Current: BLUE, Deploying: GREEN"
        else
          echo "new_version=blue" >> $GITHUB_OUTPUT
          echo "ðŸŽ¯ Current: GREEN, Deploying: BLUE"
        fi

    - name: Deploy new version
      run: |
        echo "Deploying ${{ steps.detect.outputs.new_version }} version"
        kubectl apply -f k8s/blue-green/${{ steps.detect.outputs.new_version }}-deployment.yaml -n techwave-app
        
        echo "Waiting for new version to be ready..."
        kubectl rollout status deployment/frontend-${{ steps.detect.outputs.new_version }} -n techwave-app --timeout=180s

    - name: Switch traffic
      run: |
        echo "Switching traffic to ${{ steps.detect.outputs.new_version }}"
        kubectl patch service frontend-service -n techwave-app -p "{\"spec\":{\"selector\":{\"version\":\"${{ steps.detect.outputs.new_version }}\"}}}"
        echo "Done! Now using ${{ steps.detect.outputs.new_version }} version"

    - name: Rollback if failed
      if: failure()
      run: |
        echo "Deployment failed, rolling back..."
        kubectl rollout undo deployment/frontend-${{ steps.detect.outputs.new_version }} -n techwave-app
        kubectl patch service frontend-service -n techwave-app -p "{\"spec\":{\"selector\":{\"version\":\"${{ steps.detect.outputs.current_version }}\"}}}"
        echo "Rollback completed to ${{ steps.detect.outputs.current_version }} version"
